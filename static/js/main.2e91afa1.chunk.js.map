{"version":3,"sources":["Login.js","Homepage.js","BlogCreate.js","BlogEdit.js","Header.js","Signup.js","App.js","index.js"],"names":["Login","props","history","useHistory","className","type","name","value","username","onChange","password","to","onClick","e","preventDefault","fetch","process","method","headers","body","JSON","stringify","then","response","json","data","console","log","status","localStorage","setItem","token","user","push","Homepage","useEffect","setTitle","setContent","setPublished","setEditAuthor","getItem","currentUser","parse","userFilter","post_list","filter","post","author","setUserPosts","catch","err","error","userPosts","postList","map","published","data-post","data-id","_id","title","publishPost","deletePost","editPost","content","parent","target","parentElement","getAttribute","id","window","location","reload","checkExpiration","BlogCreate","checked","BlogEdit","useParams","editAuthor","Header","href","clear","Signup","res","errors","info","message","alert","forEach","msg","setPassword","setUsername","App","useState","setCurrentUser","isExpired","decodedToken","jwt","decode","complete","dateNow","Date","payload","exp","getTime","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e91afa1.chunk.js","sourcesContent":["import { Link, useHistory } from \"react-router-dom\";\n\nconst Login = props => {\n    const history = useHistory();\n\n    function onSubmit(e){\n        e.preventDefault();\n        fetch(`${process.env.REACT_APP_API}/login`,{\n            method: 'POST',\n            headers:{'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                username: props.username,\n                password: props.password\n            })\n        })\n        .then(response=>response.json())\n        .then(data=>{\n            console.log(data);\n            if(data.status===200){\n                localStorage.setItem('authToken', data.token);\n                localStorage.setItem('currentUser', JSON.stringify(data.user));\n                // props.setCurrentUser(data.user.username);\n                history.push('/');\n            }\n        })\n    }\n\n    return(\n        <div className='userFormContainer'>\n            <div className='userForm'>\n                <h3>Log in</h3>\n                <form>\n                    <label> Username:\n                        <input\n                            type='text'\n                            name='username'\n                            value={props.username}\n                            onChange={props.onChange}\n                        />\n                    </label>\n                    <label> Password:\n                        <input\n                            type='password'\n                            name='password'\n                            value={props.password}\n                            onChange={props.onChange}\n                        />\n                    </label>\n                        <p>Don't have an account? <Link to='/signup'>Sign Up</Link></p>\n                    <button\n                        type='submit'\n                        onClick={onSubmit}\n                    >Log In</button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default Login","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst Homepage = props => {\n    const history = useHistory();\n\n    useEffect(()=>{\n        // localStorage.clear()\n        props.setTitle('');\n        props.setContent('');\n        props.setPublished(false);\n        props.setEditAuthor('');\n        fetch(`${process.env.REACT_APP_API}/posts`)\n        .then(response=>response.json())\n        .then(data=>{\n          console.log(data);\n          if(localStorage.getItem('currentUser')){\n              let currentUser = JSON.parse(localStorage.getItem('currentUser')).username\n              let userFilter = data.post_list.filter(post=>post.author&&post.author.username===currentUser);\n              props.setUserPosts(userFilter);\n          }\n          // console.log('USER POSTS',userPosts);\n        })\n        .catch(err=>console.error(err));\n    },[])\n\n    if(props.userPosts){\n        var postList = props.userPosts.map(post=>\n        <div\n            className={post.published?'preview':'preview unpublishedPost'}\n            key={post._id}\n            data-post={JSON.stringify(post)}\n            data-id={post._id}\n        >\n            <h2 className='postTitle'>{post.title}<span>{post.published?'':' (Unpublished)'}</span></h2>\n            <div className='actions'>\n                <button className={post.published?'unpublish':'publish'} onClick={publishPost}>{post.published?'Unpublish':'Publish'}</button>\n                <button className='delete' onClick={deletePost}>Delete</button>\n                <button className='edit' onClick={editPost}>Edit</button>\n            </div>\n            <div className='content'>\n                <p className='postContent'>{post.content}</p>\n            </div>\n        </div>)\n    }\n\n    function publishPost(e){\n        let parent = e.target.parentElement.parentElement;\n        let post = JSON.parse(parent.getAttribute('data-post'));\n        // let title = parent.querySelector('.postTitle').innerHTML;\n        // let content = parent.querySelector('.postContent').innerHTML;\n        \n        fetch(`${process.env.REACT_APP_API}/posts/${post.id}`, {\n            method:'PUT',\n            headers:{\n                'Content-Type':'application/json',\n                'Authorization':'Bearer ' + localStorage.getItem('authToken')\n            },\n            body:JSON.stringify({\n                title: post.title,\n                content: post.content,\n                published: !post.published,\n                author: post.author._id\n            })\n        })\n            .then(response=>response.json())\n            .then(data=>{\n                console.log(data);\n                window.location.reload();\n            })\n            .catch(err=>console.error(err));\n    }\n\n    function deletePost(e){\n        let parent = e.target.parentElement.parentElement;\n        let id = parent.getAttribute('data-id');\n        fetch(`${process.env.REACT_APP_API}/posts/${id}`, {\n            method:'DELETE',\n            headers:{\n                'Content-Type':'application/json',\n                'Authorization':'Bearer ' + localStorage.getItem('authToken')\n            }\n        })\n            .then(response=>response.json())\n            .then(data=>{\n                console.log(data)\n                window.location.reload();\n            })\n            .catch(err=>console.error(err));\n    }\n\n    function editPost(e){\n        let parent = e.target.parentElement.parentElement;\n        let post = JSON.parse(parent.getAttribute('data-post'));\n        console.log(post);\n        props.setTitle(post.title);\n        props.setContent(post.content);\n        props.setPublished(post.published);\n        props.setEditAuthor(post.author._id);\n        history.push('/posts/' + post.id);\n    }\n\n    props.checkExpiration();\n    if(localStorage.getItem('currentUser')){\n        return(\n            <div className='homepage'>\n                {/* <Link to='/login'>Login</Link> */}\n                {/* Welcome {JSON.parse(localStorage.getItem('currentUser')).username} */}\n                <h1>Your Blog Posts</h1>\n                {/* <h1>{JSON.parse(localStorage.getItem('currentUser')).username}'s Blog Posts</h1> */}\n                <Link to='/posts'>\n                    <div className='createPost'>\n                        <h2>Create a new Post</h2>\n                        {/* <button className='createBtn'>+</button> */}\n                    </div>\n                </Link>\n                {postList}\n            </div>\n        );\n    }else{\n        history.push('/login');\n        return(\n            <div>\n                <Link to='/login'>Login</Link>\n                Welcome guest\n            </div>\n        );\n    }\n}\n\nexport default Homepage","// import React from 'react';\n\nimport { useHistory } from \"react-router-dom\";\n\nconst BlogCreate = props => {\n    const history = useHistory();\n    function onSubmit(e){\n        e.preventDefault();\n        props.checkExpiration();\n        if(!localStorage.getItem('authToken')) {\n            history.push('./login')\n        }else{\n            fetch(`${process.env.REACT_APP_API}/posts`,{\n                method:'POST',\n                headers:{\n                    'Content-Type':'application/json',\n                    'Authorization':'Bearer ' + localStorage.getItem('authToken')\n                },\n                body:JSON.stringify({\n                    title: props.title,\n                    content: props.content,\n                    published: props.published,\n                })\n            })\n                .then(response=>response.json())\n                .then(data=>{\n                    console.log(data);\n                    history.push('/');\n                })\n                .catch(err=>console.error(err))\n        }\n    }\n\n    return(\n        <div className='postForm'>\n            <h2>Creating New Post</h2>\n            <form>\n                <label>Title \n                    <input\n                        type = 'text'\n                        name = 'title'\n                        className = 'formTitle'\n                        value = {props.title}\n                        onChange = {props.onChange}\n                    />\n                </label>\n                <label> Post Content\n                    <textarea\n                        name = 'content'\n                        value = {props.content}\n                        onChange = {props.onChange}\n                    />\n                </label>\n                <label>Publish\n                    <input\n                        type = 'checkbox'\n                        name = 'published'\n                        value = {props.published}\n                        checked = {props.published}\n                        onChange = {props.onChange}\n                    />\n                </label>\n                <button\n                    onClick={onSubmit}\n                    type='submit'\n                >Submit</button>\n            </form>\n        </div>\n    );\n}\n\nexport default BlogCreate","import { useHistory, useParams } from \"react-router-dom\";\n\nconst BlogEdit = props => {\n    const {id} = useParams();\n    const history = useHistory();\n\n    function onSubmit(e) {\n        e.preventDefault();\n        props.checkExpiration();\n        if(!localStorage.getItem('authToken')) {\n            history.push('./login')\n        }else{\n            fetch(`${process.env.REACT_APP_API}/posts/${id}`,{\n                method:'PUT',\n                headers:{\n                    'Content-Type':'application/json',\n                    'Authorization':'Bearer ' + localStorage.getItem('authToken')\n                },\n                body:JSON.stringify({\n                    title: props.title,\n                    content: props.content,\n                    published: props.published,\n                    author: props.editAuthor\n                })\n            })\n                .then(response=>response.json())\n                .then(data=>{\n                    console.log(data);\n                    history.push('/');\n                })\n                .catch(err=>console.error(err))\n        }\n    }\n\n    return(\n        <div className='postForm'>\n            <h2>Editing {props.title}</h2>\n            <form>\n                <label>Title: \n                    <input\n                        type = 'text'\n                        name = 'title'\n                        value = {props.title}\n                        onChange = {props.onChange}\n                    />\n                </label>\n                <label> Post Content: \n                    <textarea\n                        name = 'content'\n                        value = {props.content}\n                        onChange = {props.onChange}\n                    />\n                </label>\n                <label>Publish?\n                    <input\n                        type = 'checkbox'\n                        name = 'published'\n                        value = {props.published}\n                        checked = {props.published}\n                        onChange = {props.onChange}\n                    />\n                </label>\n                <button\n                    onClick={onSubmit}\n                    type='submit'\n                >Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default BlogEdit","import { Link } from \"react-router-dom\"\n\nconst Header = props => {\n    if(localStorage.getItem('currentUser')){\n        return(\n            <header>\n                <Link to='/'>Blog Manager</Link>\n                <nav>\n                    <a href='https://lufere.dev/blog-API'>Blog Viewer</a>\n                    <p>Welcome <span>{JSON.parse(localStorage.getItem('currentUser')).username}</span></p>\n                    <button\n                        onClick={()=>{\n                            localStorage.clear();\n                            window.location.reload();\n                        }}\n                    >\n                        Logout\n                    </button>\n                    {/* <Link to='/signup'>Sign up</Link> */}\n                </nav>\n            </header>\n        )\n    }else{\n        return(\n            <header>\n                <Link to='/'>Blog Manager</Link>\n                <nav>\n                    <a href='https://lufere.dev/blog-API'>Blog Viewer</a>\n                    <Link to='/login'>Login</Link>\n                    <Link to='/signup'>Sign up</Link>\n                </nav>\n            </header>\n        )\n    }\n\n}\n\nexport default Header","import { Link, useHistory } from \"react-router-dom\"\n\nconst Signup = props => {\n    const history = useHistory();\n    \n    function onSubmit(e){\n        e.preventDefault();\n        fetch(`${process.env.REACT_APP_API}/sign-up`,{\n            method:'POST',\n            headers:{'Content-Type':'application/json'},\n            body:JSON.stringify({\n                \"username\":props.username,\n                \"password\":props.password,\n                \"creator\":true\n            })\n        })\n        .then(res=>res.json())\n        .then(data=>{\n            if(data.status===400){\n                console.log('info', data.errors)\n                if(data.info && data.info.message) alert(data.info.message);\n                if(data.errors){\n                    data.errors.forEach(error=>alert(error.msg))\n                }\n                props.setPassword('');\n            }\n            if(data.status===200){\n                let token = data.token;\n                let user = data.user;\n                console.log('user', data.user)\n                localStorage.setItem('currentUser', JSON.stringify(user));\n                localStorage.setItem('authToken', token);\n                props.setUsername('');\n                props.setPassword('');\n                history.push('/');\n            }\n        })\n        .catch(err=>console.error(err))\n    }\n\n    return(\n        <div className='userFormContainer'>\n            <div className='userForm'>\n                <h3>Sign up</h3>\n                <form>\n                    <label> Username\n                        <input type='text' name='username' value={props.username} onChange={props.onChange}></input>\n                    </label>\n                    <label> Password\n                        <input type='password' name='password' value={props.password} onChange={props.onChange}></input>\n                    </label>\n                    <p>Already have an account? <Link to='/login'> Log In</Link></p>\n                    <button className='signupSubmit' type='submit' onClick={onSubmit}>Sign up</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Signup","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState } from 'react';\nimport { Switch, Route, HashRouter } from 'react-router-dom';\nimport './App.scss';\nimport jwt from 'jsonwebtoken';\n\nimport Login from './Login';\nimport Homepage from './Homepage';\nimport BlogCreate from './BlogCreate';\nimport BlogEdit from './BlogEdit';\nimport Header from './Header';\nimport Signup from './Signup';\n\nfunction App() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [currentUser, setCurrentUser] = useState();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [published, setPublished] = useState(false);\n  const [userPosts, setUserPosts] = useState();\n  const [editAuthor, setEditAuthor] = useState();\n\n  function onChange(e){\n    let name = e.target.name;\n    let value = e.target.value;\n    if(name==='username') setUsername(value);\n    if(name==='password') setPassword(value);\n    if(name==='title') setTitle(value);\n    if(name==='content') setContent(value);\n    if(name==='published') setPublished(!published);\n  }\n\n  function checkExpiration(){\n    if(localStorage.getItem('authToken')){\n      var isExpired = false;\n      const token = localStorage.getItem('authToken');\n      var decodedToken = jwt.decode(token, {complete:true});\n      var dateNow = new Date();\n      if(decodedToken.payload.exp < dateNow.getTime()/1000) isExpired = true;\n      // setCurrentUser(decodedToken.payload.username);\n      if(isExpired){\n        // setCurrentUser();\n        localStorage.clear();\n      }\n      // console.log(decodedToken.payload.username);\n      // localStorage.setItem('currentUser', decodedToken.payload.username)\n      // console.log(dateNow.getTime()/1000);\n      console.log('EXPIRED ',isExpired);\n    }\n  }\n\n  useEffect(()=>{\n    // console.log('tokenLS', localStorage.getItem('authToken'));\n    console.log('hi')\n    checkExpiration();\n    // localStorage.clear()\n  },[])\n\n  useEffect(()=>console.log('USER POSTS', userPosts),[userPosts])\n  // useEffect(()=>console.log('set', currentUser),[currentUser])\n\n  return (\n    <HashRouter>\n      <Header\n        checkExpiration={checkExpiration}\n      />\n      <Switch>\n        <Route exact path='/'>\n          <Homepage\n            currentUser={currentUser}\n            setCurrentUser={setCurrentUser}\n            checkExpiration={checkExpiration}\n            userPosts={userPosts}\n            setUserPosts={setUserPosts}\n            title={title}\n            setTitle={setTitle}\n            content={content}\n            setContent={setContent}\n            published={published}\n            setPublished={setPublished}\n            setEditAuthor={setEditAuthor}\n          />\n        </Route>\n        <Route exact path='/login'>\n          <Login\n            username={username}\n            password={password}\n            onChange={onChange}\n            currentUser={currentUser}\n            setCurrentUser={setCurrentUser}\n          />\n        </Route>\n        <Route exact path='/signup'>\n          <Signup\n            username={username}\n            setUsername={setUsername}\n            password={password}\n            setPassword={setPassword}\n            onChange={onChange}\n          />\n        </Route>\n        <Route exact path='/posts/'>\n          <BlogCreate\n            title={title}\n            setTitle={setTitle}\n            content={content}\n            setContent={setContent}\n            published={published}\n            setPublished={setPublished}\n            onChange={onChange}\n            checkExpiration={checkExpiration}\n          />\n        </Route>\n        <Route exact path='/posts/:id'>\n          <BlogEdit\n            title={title}\n            setTitle={setTitle}\n            content={content}\n            setContent={setContent}\n            published={published}\n            setPublished={setPublished}\n            onChange={onChange}\n            checkExpiration={checkExpiration}\n            editAuthor={editAuthor}\n            setEditAuthor={setEditAuthor}\n          />\n        </Route>\n      </Switch>\n    </HashRouter>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}