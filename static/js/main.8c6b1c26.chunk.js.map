{"version":3,"sources":["Login.js","Homepage.js","BlogCreate.js","BlogEdit.js","Header.js","Signup.js","App.js","index.js"],"names":["Login","props","history","useHistory","className","type","name","value","username","onChange","password","to","onClick","e","preventDefault","fetch","process","method","headers","body","JSON","stringify","then","response","json","data","console","log","status","localStorage","setItem","token","user","push","Homepage","htmlDecode","input","DOMParser","parseFromString","documentElement","textContent","useEffect","setTitle","setContent","setPublished","setEditAuthor","getItem","currentUser","parse","userFilter","post_list","filter","post","author","setUserPosts","catch","err","error","userPosts","postList","map","published","data-post","data-id","_id","title","publishPost","deletePost","editPost","dangerouslySetInnerHTML","__html","content","parent","target","parentElement","getAttribute","id","window","location","reload","checkExpiration","BlogCreate","textareaName","apiKey","onEditorChange","tagName","init","height","menubar","plugins","toolbar","checked","BlogEdit","useParams","initialValue","editAuthor","Header","href","clear","Signup","res","errors","info","message","alert","forEach","msg","setPassword","setUsername","App","useState","setCurrentUser","isExpired","decodedToken","jwt","decode","complete","dateNow","Date","payload","exp","getTime","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c6b1c26.chunk.js","sourcesContent":["import { Link, useHistory } from \"react-router-dom\";\nconst Login = props => {\n    const history = useHistory();\n\n    function onSubmit(e){\n        e.preventDefault();\n        fetch(`${process.env.REACT_APP_API}/login`,{\n            method: 'POST',\n            headers:{'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                username: props.username,\n                password: props.password\n            })\n        })\n        .then(response=>response.json())\n        .then(data=>{\n            console.log(data);\n            if(data.status===200){\n                localStorage.setItem('authToken', data.token);\n                localStorage.setItem('currentUser', JSON.stringify(data.user));\n                // props.setCurrentUser(data.user.username);\n                history.push('/');\n            }\n        })\n    }\n\n\n\n    return(\n        \n        <div className='userFormContainer'>\n\n            <div className='userForm'>\n                <h3>Log in</h3>\n                <form>\n                    <label> Username:\n                        <input\n                            type='text'\n                            name='username'\n                            value={props.username}\n                            onChange={props.onChange}\n                        />\n                    </label>\n                    <label> Password:\n                        <input\n                            type='password'\n                            name='password'\n                            value={props.password}\n                            onChange={props.onChange}\n                        />\n                    </label>\n                        <p>Don't have an account? <Link to='/signup'>Sign Up</Link></p>\n                    <button\n                        type='submit'\n                        onClick={onSubmit}\n                    >Log In</button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default Login","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst Homepage = props => {\n    const history = useHistory();\n\n    useEffect(()=>{\n        // localStorage.clear()\n        props.setTitle('');\n        props.setContent('');\n        props.setPublished(false);\n        props.setEditAuthor('');\n        fetch(`${process.env.REACT_APP_API}/posts`)\n        .then(response=>response.json())\n        .then(data=>{\n          console.log(data);\n          if(localStorage.getItem('currentUser')){\n              let currentUser = JSON.parse(localStorage.getItem('currentUser')).username\n              let userFilter = data.post_list.filter(post=>post.author&&post.author.username===currentUser);\n              props.setUserPosts(userFilter);\n          }\n          // console.log('USER POSTS',userPosts);\n        })\n        .catch(err=>console.error(err));\n    },[])\n\n    function htmlDecode(input){\n        // var e = document.createElement('textarea');\n        // e.innerHTML = input;\n        // // handle case of empty input\n        // return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n\n        var doc = new DOMParser().parseFromString(input, \"text/html\");\n        // console.log('doc', doc.documentElement.textContent);\n        return doc.documentElement.textContent;\n    }\n\n    if(props.userPosts){\n        var postList = props.userPosts.map(post=>\n        <div\n            className={post.published?'preview':'preview unpublishedPost'}\n            key={post._id}\n            data-post={JSON.stringify(post)}\n            data-id={post._id}\n        >\n            <h2 className='postTitle'>{post.title}<span>{post.published?'':' (Unpublished)'}</span></h2>\n            <div className='actions'>\n                <button className={post.published?'unpublish':'publish'} onClick={publishPost}>{post.published?'Unpublish':'Publish'}</button>\n                <button className='delete' onClick={deletePost}>Delete</button>\n                <button className='edit' onClick={editPost}>Edit</button>\n            </div>\n            <div className='content' dangerouslySetInnerHTML={{__html: htmlDecode(post.content) }}>\n                {/* <p className='postContent'>{unescape(post.content)}</p> */}\n            </div>\n        </div>)\n    }\n\n    function publishPost(e){\n        let parent = e.target.parentElement.parentElement;\n        let post = JSON.parse(parent.getAttribute('data-post'));\n        // let title = parent.querySelector('.postTitle').innerHTML;\n        // let content = parent.querySelector('.postContent').innerHTML;\n        \n        fetch(`${process.env.REACT_APP_API}/posts/${post.id}`, {\n            method:'PUT',\n            headers:{\n                'Content-Type':'application/json',\n                'Authorization':'Bearer ' + localStorage.getItem('authToken')\n            },\n            body:JSON.stringify({\n                title: post.title,\n                content: htmlDecode(post.content),\n                published: !post.published,\n                author: post.author._id\n            })\n        })\n            .then(response=>response.json())\n            .then(data=>{\n                console.log(data);\n                window.location.reload();\n            })\n            .catch(err=>console.error(err));\n    }\n\n    function deletePost(e){\n        let parent = e.target.parentElement.parentElement;\n        let id = parent.getAttribute('data-id');\n        fetch(`${process.env.REACT_APP_API}/posts/${id}`, {\n            method:'DELETE',\n            headers:{\n                'Content-Type':'application/json',\n                'Authorization':'Bearer ' + localStorage.getItem('authToken')\n            }\n        })\n            .then(response=>response.json())\n            .then(data=>{\n                console.log(data)\n                window.location.reload();\n            })\n            .catch(err=>console.error(err));\n    }\n\n    function editPost(e){\n        let parent = e.target.parentElement.parentElement;\n        let post = JSON.parse(parent.getAttribute('data-post'));\n        console.log(post);\n        props.setTitle(post.title);\n        props.setContent(post.content);\n        props.setPublished(post.published);\n        props.setEditAuthor(post.author._id);\n        history.push('/posts/' + post.id);\n    }\n\n    props.checkExpiration();\n    if(localStorage.getItem('currentUser')){\n        return(\n            <div className='homepage'>\n                {/* <Link to='/login'>Login</Link> */}\n                {/* Welcome {JSON.parse(localStorage.getItem('currentUser')).username} */}\n                <h1>Blog Posts by {JSON.parse(localStorage.getItem('currentUser')).username}</h1>\n                {/* <h1>{JSON.parse(localStorage.getItem('currentUser')).username}'s Blog Posts</h1> */}\n                <Link to='/posts'>\n                    <div className='createPost'>\n                        <h2>Create a new Post</h2>\n                        {/* <button className='createBtn'>+</button> */}\n                    </div>\n                </Link>\n                {postList}\n            </div>\n        );\n    }else{\n        history.push('/login');\n        return(\n            <div>\n                <Link to='/login'>Login</Link>\n                Welcome guest\n            </div>\n        );\n    }\n}\n\nexport default Homepage","// import React from 'react';\n\nimport { useHistory } from \"react-router-dom\";\nimport { Editor } from '@tinymce/tinymce-react'; \n\nconst BlogCreate = props => {\n    const history = useHistory();\n    function onSubmit(e){\n        e.preventDefault();\n        props.checkExpiration();\n        if(!localStorage.getItem('authToken')) {\n            history.push('./login')\n        }else{\n            fetch(`${process.env.REACT_APP_API}/posts`,{\n                method:'POST',\n                headers:{\n                    'Content-Type':'application/json',\n                    'Authorization':'Bearer ' + localStorage.getItem('authToken')\n                },\n                body:JSON.stringify({\n                    title: props.title,\n                    content: props.content,\n                    published: props.published,\n                })\n            })\n                .then(response=>response.json())\n                .then(data=>{\n                    console.log(data);\n                    history.push('/');\n                })\n                .catch(err=>console.error(err))\n        }\n    }\n    const handleEditorChange = (e) => {\n        console.log(\n          'Content was updated:',\n          e.target.getContent()\n        );\n        props.setContent(e.target.getContent());\n    }\n\n    return(\n        <div className='postForm'>\n            <h2>Creating New Post</h2>\n            <form>\n                <label>Title \n                    <input\n                        type = 'text'\n                        name = 'title'\n                        className = 'formTitle'\n                        value = {props.title}\n                        onChange = {props.onChange}\n                    />\n                </label>\n                <label> Post Content\n                    <Editor\n                        className='editor'\n                        textareaName='myTextArea'\n                        apiKey=\"iou7093g4pl6zn5mrc6fxwye33asheqmzogqvbiyn985qfef\"\n                        value={props.content}\n                        onEditorChange={props.onChange}\n                        tagName='textarea'\n                        init={{\n                        height: 300,\n                        menubar: false,\n                        plugins: [\n                            'advlist autolink lists link image',\n                            'charmap print preview anchor help',\n                            'searchreplace visualblocks code',\n                            'insertdatetime media table paste wordcount'\n                        ],\n                        toolbar:\n                            'undo redo | formatselect | bold italic | alignleft aligncenter alignright | bullist numlist outdent indent | help'\n                        }}\n                        // onChange={handleEditorChange}\n                    />\n                </label>\n                {/* <label> Post Content\n                    <textarea\n                        name = 'content'\n                        value = {props.content}\n                        onChange = {props.onChange}\n                    />\n                </label> */}\n                <label>Publish\n                    <input\n                        type = 'checkbox'\n                        name = 'published'\n                        value = {props.published}\n                        checked = {props.published}\n                        onChange = {props.onChange}\n                    />\n                </label>\n                <button\n                    onClick={onSubmit}\n                    type='submit'\n                >Submit</button>\n            </form>\n        </div>\n    );\n}\n\nexport default BlogCreate","import { useHistory, useParams } from \"react-router-dom\";\nimport { Editor } from '@tinymce/tinymce-react'; \n\nconst BlogEdit = props => {\n    const {id} = useParams();\n    const history = useHistory();\n\n    function onSubmit(e) {\n        e.preventDefault();\n        props.checkExpiration();\n        if(!localStorage.getItem('authToken')) {\n            history.push('./login')\n        }else{\n            fetch(`${process.env.REACT_APP_API}/posts/${id}`,{\n                method:'PUT',\n                headers:{\n                    'Content-Type':'application/json',\n                    'Authorization':'Bearer ' + localStorage.getItem('authToken')\n                },\n                body:JSON.stringify({\n                    title: props.title,\n                    content: props.content,\n                    // content: props.content,\n                    published: props.published,\n                    author: props.editAuthor\n                })\n            })\n                .then(response=>response.json())\n                .then(data=>{\n                    console.log(data);\n                    history.push('/');\n                })\n                .catch(err=>console.error(err))\n        }\n    }\n\n    function htmlDecode(input){\n        var doc = new DOMParser().parseFromString(input, \"text/html\");\n        // console.log('doc', doc.documentElement.textContent);\n        return doc.documentElement.textContent;\n    }\n\n    return(\n        <div className='postForm'>\n            <h2>Editing {props.title}</h2>\n            <form>\n            <div\n                className='return'\n                onClick={()=>history.push('/')}\n            />\n                <label>Title\n                    <input\n                        type = 'text'\n                        name = 'title'\n                        className = 'formTitle'\n                        value = {props.title}\n                        onChange = {props.onChange}\n                    />\n                </label>\n                <label> Post Content\n                    <Editor\n                        textareaName='myTextArea'\n                        apiKey=\"iou7093g4pl6zn5mrc6fxwye33asheqmzogqvbiyn985qfef\"\n                        // value={props.content}\n                        // value={props.content}\n                        initialValue={htmlDecode(props.content)}\n                        onEditorChange={props.onChange}\n                        init={{\n                        height: 300,\n                        menubar: false,\n                        plugins: [\n                            'advlist autolink lists link image',\n                            'charmap print preview anchor help',\n                            'searchreplace visualblocks code',\n                            'insertdatetime media table paste wordcount'\n                        ],\n                        toolbar:\n                            'undo redo | formatselect | bold italic | alignleft aligncenter alignright | bullist numlist outdent indent | help'\n                        }}\n                        // onChange={handleEditorChange}\n                    />\n                </label>\n                {/* <label> Post Content: \n                    <textarea\n                        name = 'content'\n                        value = {props.content}\n                        onChange = {props.onChange}\n                    />\n                </label> */}\n                {/* <button onClick={(e)=>{\n                    e.preventDefault();\n                    console.log(htmlDecode(props.content));\n                    }}>\n                    TEST\n                </button> */}\n                <label>Publish?\n                    <input\n                        type = 'checkbox'\n                        name = 'published'\n                        value = {props.published}\n                        checked = {props.published}\n                        onChange = {props.onChange}\n                    />\n                </label>\n                <button\n                    onClick={onSubmit}\n                    type='submit'\n                >Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default BlogEdit","import { Link } from \"react-router-dom\"\n\nconst Header = props => {\n    if(localStorage.getItem('currentUser')){\n        return(\n            <header>\n                <Link to='/'>Blog Manager</Link>\n                <nav>\n                    <a href='https://lufere.dev/blog-API'>Blog Viewer</a>\n                    <p>Welcome <span>{JSON.parse(localStorage.getItem('currentUser')).username}</span></p>\n                    <button\n                        onClick={()=>{\n                            localStorage.clear();\n                            window.location.reload();\n                        }}\n                    >\n                        Logout\n                    </button>\n                    {/* <Link to='/signup'>Sign up</Link> */}\n                </nav>\n            </header>\n        )\n    }else{\n        return(\n            <header>\n                <Link to='/'>Blog Manager</Link>\n                <nav>\n                    <a href='https://lufere.dev/blog-API'>Blog Viewer</a>\n                    <Link to='/login'>Login</Link>\n                    <Link to='/signup'>Sign up</Link>\n                </nav>\n            </header>\n        )\n    }\n\n}\n\nexport default Header","import { Link, useHistory } from \"react-router-dom\"\n\nconst Signup = props => {\n    const history = useHistory();\n    \n    function onSubmit(e){\n        e.preventDefault();\n        fetch(`${process.env.REACT_APP_API}/sign-up`,{\n            method:'POST',\n            headers:{'Content-Type':'application/json'},\n            body:JSON.stringify({\n                \"username\":props.username,\n                \"password\":props.password,\n                \"creator\":true\n            })\n        })\n        .then(res=>res.json())\n        .then(data=>{\n            if(data.status===400){\n                console.log('info', data.errors)\n                if(data.info && data.info.message) alert(data.info.message);\n                if(data.errors){\n                    data.errors.forEach(error=>alert(error.msg))\n                }\n                props.setPassword('');\n            }\n            if(data.status===200){\n                let token = data.token;\n                let user = data.user;\n                console.log('user', data.user)\n                localStorage.setItem('currentUser', JSON.stringify(user));\n                localStorage.setItem('authToken', token);\n                props.setUsername('');\n                props.setPassword('');\n                history.push('/');\n            }\n        })\n        .catch(err=>console.error(err))\n    }\n\n    return(\n        <div className='userFormContainer'>\n            <div className='userForm'>\n                <h3>Sign up</h3>\n                <form>\n                    <label> Username\n                        <input type='text' name='username' value={props.username} onChange={props.onChange}></input>\n                    </label>\n                    <label> Password\n                        <input type='password' name='password' value={props.password} onChange={props.onChange}></input>\n                    </label>\n                    <p>Already have an account? <Link to='/login'> Log In</Link></p>\n                    <button className='signupSubmit' type='submit' onClick={onSubmit}>Sign up</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Signup","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState } from 'react';\nimport { Switch, Route, HashRouter } from 'react-router-dom';\nimport './App.scss';\nimport jwt from 'jsonwebtoken';\n\nimport Login from './Login';\nimport Homepage from './Homepage';\nimport BlogCreate from './BlogCreate';\nimport BlogEdit from './BlogEdit';\nimport Header from './Header';\nimport Signup from './Signup';\n\nfunction App() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [currentUser, setCurrentUser] = useState();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [published, setPublished] = useState(true);\n  const [userPosts, setUserPosts] = useState();\n  const [editAuthor, setEditAuthor] = useState();\n\n  function onChange(e){\n    let name, value;\n    if(e.target){\n      name = e.target.name;\n      value = e.target.value;\n    }else{\n      name = 'content';\n      value = e;\n      // value = htmlDecode(e);\n    }\n    // console.log(name, value);\n    if(name==='username') setUsername(value);\n    if(name==='password') setPassword(value);\n    if(name==='title') setTitle(value);\n    if(name==='content') setContent(value);\n    if(name==='published') setPublished(!published);\n  }\n\n  function htmlDecode(input){\n    var doc = new DOMParser().parseFromString(input, \"text/html\");\n    // console.log('doc', doc.documentElement.textContent);\n    return doc.documentElement.textContent;\n}\n\n  function checkExpiration(){\n    if(localStorage.getItem('authToken')){\n      var isExpired = false;\n      const token = localStorage.getItem('authToken');\n      var decodedToken = jwt.decode(token, {complete:true});\n      var dateNow = new Date();\n      if(decodedToken.payload.exp < dateNow.getTime()/1000) isExpired = true;\n      // setCurrentUser(decodedToken.payload.username);\n      if(isExpired){\n        // setCurrentUser();\n        localStorage.clear();\n      }\n      // console.log(decodedToken.payload.username);\n      // localStorage.setItem('currentUser', decodedToken.payload.username)\n      // console.log(dateNow.getTime()/1000);\n      // console.log('EXPIRED ',isExpired);\n    }\n  }\n\n  useEffect(()=>{\n    // console.log('tokenLS', localStorage.getItem('authToken'));\n    // console.log('hi')\n    checkExpiration();\n    // localStorage.clear()\n  },[])\n\n  useEffect(()=>console.log('USER POSTS', userPosts),[userPosts])\n  // useEffect(()=>console.log('set', currentUser),[currentUser])\n\n  return (\n    <HashRouter>\n      <Header\n        checkExpiration={checkExpiration}\n      />\n      <Switch>\n        <Route exact path='/'>\n          <Homepage\n            currentUser={currentUser}\n            setCurrentUser={setCurrentUser}\n            checkExpiration={checkExpiration}\n            userPosts={userPosts}\n            setUserPosts={setUserPosts}\n            title={title}\n            setTitle={setTitle}\n            content={content}\n            setContent={setContent}\n            published={published}\n            setPublished={setPublished}\n            setEditAuthor={setEditAuthor}\n          />\n        </Route>\n        <Route exact path='/login'>\n          <Login\n            username={username}\n            password={password}\n            onChange={onChange}\n            currentUser={currentUser}\n            setCurrentUser={setCurrentUser}\n          />\n        </Route>\n        <Route exact path='/signup'>\n          <Signup\n            username={username}\n            setUsername={setUsername}\n            password={password}\n            setPassword={setPassword}\n            onChange={onChange}\n          />\n        </Route>\n        <Route exact path='/posts/'>\n          <BlogCreate\n            title={title}\n            setTitle={setTitle}\n            content={content}\n            setContent={setContent}\n            published={published}\n            setPublished={setPublished}\n            onChange={onChange}\n            checkExpiration={checkExpiration}\n          />\n        </Route>\n        <Route exact path='/posts/:id'>\n          <BlogEdit\n            title={title}\n            setTitle={setTitle}\n            content={content}\n            setContent={setContent}\n            published={published}\n            setPublished={setPublished}\n            onChange={onChange}\n            checkExpiration={checkExpiration}\n            editAuthor={editAuthor}\n            setEditAuthor={setEditAuthor}\n          />\n        </Route>\n      </Switch>\n    </HashRouter>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}