{"version":3,"sources":["Login.js","Homepage.js","BlogCreate.js","BlogEdit.js","UserContext.js","Header.js","Signup.js","App.js","index.js"],"names":["Login","props","history","useHistory","useEffect","expired","setErrors","reset","className","errors","type","name","value","username","onChange","password","to","onClick","e","console","log","preventDefault","fetch","process","method","headers","body","JSON","stringify","then","response","json","data","status","localStorage","setItem","token","user","checkExpiration","push","info","message","Homepage","htmlDecode","input","DOMParser","parseFromString","documentElement","textContent","setTitle","setContent","setPublished","setEditAuthor","getItem","currentUser","parse","userFilter","post_list","filter","post","author","setUserPosts","catch","err","error","userPosts","postList","map","published","data-post","data-id","_id","title","publishPost","deletePost","editPost","dangerouslySetInnerHTML","__html","content","parent","target","parentElement","getAttribute","id","window","location","reload","sessionExpired","BlogCreate","textareaName","apiKey","onEditorChange","tagName","init","height","menubar","plugins","toolbar","getContent","checked","BlogEdit","useParams","initialValue","editAuthor","UserContext","React","createContext","UserProvider","Provider","Consumer","Header","useContext","href","clear","logout","Signup","res","msg","setPassword","setUsername","App","useState","setCurrentUser","setExpired","isExpired","decodedToken","jwt","decode","complete","dateNow","Date","payload","exp","getTime","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02ab2d22.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nconst Login = props => {\n    const history = useHistory();\n\n    useEffect(()=>{\n        if(!props.expired) props.setErrors();\n        // if(props.expired) props.setErrors('Session Expired, Log in again');\n        props.reset();\n    },[])\n\n    function onSubmit(e){\n        console.log(props.errors)\n        e.preventDefault();\n        fetch(`${process.env.REACT_APP_API}/login`,{\n            method: 'POST',\n            headers:{'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                username: props.username,\n                password: props.password\n            })\n        })\n        .then(response=>response.json())\n        .then(data=>{\n            console.log(data);\n            if(data.status===200){\n                localStorage.setItem('authToken', data.token);\n                localStorage.setItem('currentUser', JSON.stringify(data.user));\n                props.checkExpiration();\n                props.reset();\n                props.setErrors();\n                // props.setCurrentUser(data.user.username);\n                history.push('/');\n            }else if(data.status === 400){\n                props.setErrors(data.info.message);\n            }\n        })\n        return () =>{\n            console.log('UNMOUNTED')\n            props.reset();\n        }\n    }\n\n\n\n    return(\n        <div className='userFormContainer'>\n            {props.errors?<div className='errorBanner'>{props.errors}</div>:null}\n            <div className='userForm'>\n                <h3>Log in</h3>\n                <form>\n                    <label> Username:\n                        <input\n                            type='text'\n                            name='username'\n                            value={props.username}\n                            onChange={props.onChange}\n                        />\n                    </label>\n                    <label> Password:\n                        <input\n                            type='password'\n                            name='password'\n                            value={props.password}\n                            onChange={props.onChange}\n                        />\n                    </label>\n                        <p>Don't have an account? <Link to='/signup'>Sign Up</Link></p>\n                    <button\n                        type='submit'\n                        onClick={onSubmit}\n                    >Log In</button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default Login","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst Homepage = props => {\n    const history = useHistory();\n\n    useEffect(()=>{\n        // localStorage.clear()\n        props.setTitle('');\n        props.setContent('');\n        props.setPublished(false);\n        props.setEditAuthor('');\n        fetch(`${process.env.REACT_APP_API}/posts`)\n        .then(response=>response.json())\n        .then(data=>{\n        //   console.log(data);\n          if(localStorage.getItem('currentUser')){\n              let currentUser = JSON.parse(localStorage.getItem('currentUser')).username\n              let userFilter = data.post_list.filter(post=>post.author&&post.author.username===currentUser);\n              props.setUserPosts(userFilter);\n          }\n          // console.log('USER POSTS',userPosts);\n        })\n        .catch(err=>console.error(err));\n    },[])\n\n    function htmlDecode(input){\n        // var e = document.createElement('textarea');\n        // e.innerHTML = input;\n        // // handle case of empty input\n        // return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n\n        var doc = new DOMParser().parseFromString(input, \"text/html\");\n        // console.log('doc', doc.documentElement.textContent);\n        return doc.documentElement.textContent;\n    }\n\n    if(props.userPosts){\n        var postList = props.userPosts.map(post=>\n        <div\n            className={post.published?'preview':'preview unpublishedPost'}\n            key={post._id}\n            data-post={JSON.stringify(post)}\n            data-id={post._id}\n        >\n            <h2 className='postTitle'>{post.title}<span>{post.published?'':' (Unpublished)'}</span></h2>\n            <div className='actions'>\n                <button className={post.published?'unpublish':'publish'} onClick={publishPost}>{post.published?'Unpublish':'Publish'}</button>\n                <button className='delete' onClick={deletePost}>Delete</button>\n                <button className='edit' onClick={editPost}>Edit</button>\n            </div>\n            <div className='content' dangerouslySetInnerHTML={{__html: htmlDecode(post.content) }}>\n                {/* <p className='postContent'>{unescape(post.content)}</p> */}\n            </div>\n        </div>)\n    }\n\n    function publishPost(e){\n        let parent = e.target.parentElement.parentElement;\n        let post = JSON.parse(parent.getAttribute('data-post'));\n        // let title = parent.querySelector('.postTitle').innerHTML;\n        // let content = parent.querySelector('.postContent').innerHTML;\n        \n        fetch(`${process.env.REACT_APP_API}/posts/${post.id}`, {\n            method:'PUT',\n            headers:{\n                'Content-Type':'application/json',\n                'Authorization':'Bearer ' + localStorage.getItem('authToken')\n            },\n            body:JSON.stringify({\n                title: post.title,\n                content: htmlDecode(post.content),\n                published: !post.published,\n                author: post.author._id\n            })\n        })\n            .then(response=>response.json())\n            .then(data=>{\n                console.log(data);\n                window.location.reload();\n            })\n            .catch(err=>{\n                console.error(err);\n                props.sessionExpired();\n                history.push('/login');\n                // window.location.reload();\n            });\n    }\n\n    function deletePost(e){\n        let parent = e.target.parentElement.parentElement;\n        let id = parent.getAttribute('data-id');\n        fetch(`${process.env.REACT_APP_API}/posts/${id}`, {\n            method:'DELETE',\n            headers:{\n                'Content-Type':'application/json',\n                'Authorization':'Bearer ' + localStorage.getItem('authToken')\n            }\n        })\n            .then(response=>response.json())\n            .then(data=>{\n                console.log(data)\n                window.location.reload();\n            })\n            .catch(err=>{\n                console.error(err)\n                props.sessionExpired();\n                history.push('/login');\n            });\n    }\n\n    function editPost(e){\n        let parent = e.target.parentElement.parentElement;\n        let post = JSON.parse(parent.getAttribute('data-post'));\n        // console.log(post);\n        if(props.checkExpiration()){\n            props.sessionExpired();\n            history.push('/login');\n        }else{\n            props.setTitle(post.title);\n            props.setContent(post.content);\n            props.setPublished(post.published);\n            props.setEditAuthor(post.author._id);\n            history.push('/posts/' + post.id);\n        }\n    }\n\n    // props.checkExpiration();\n    if(localStorage.getItem('currentUser')){\n        return(\n            <div className='homepage'>\n                {/* <Link to='/login'>Login</Link> */}\n                {/* Welcome {JSON.parse(localStorage.getItem('currentUser')).username} */}\n                <h1>Blog Posts by {JSON.parse(localStorage.getItem('currentUser')).username}</h1>\n                {/* <h1>{JSON.parse(localStorage.getItem('currentUser')).username}'s Blog Posts</h1> */}\n                <Link to='/posts'>\n                    <div className='createPost'>\n                        <h2>Create a new Post</h2>\n                        {/* <button className='createBtn'>+</button> */}\n                    </div>\n                </Link>\n                {postList}\n            </div>\n        );\n    }else{\n        history.push('/login');\n        return(\n            <div>\n                <Link to='/login'>Login</Link>\n                Welcome guest\n            </div>\n        );\n    }\n}\n\nexport default Homepage","// import React from 'react';\n\nimport { useHistory } from \"react-router-dom\";\nimport { Editor } from '@tinymce/tinymce-react'; \n\nconst BlogCreate = props => {\n    const history = useHistory();\n    function onSubmit(e){\n        e.preventDefault();\n        props.checkExpiration();\n        if(!localStorage.getItem('authToken')) {\n            history.push('./login')\n        }else{\n            fetch(`${process.env.REACT_APP_API}/posts`,{\n                method:'POST',\n                headers:{\n                    'Content-Type':'application/json',\n                    'Authorization':'Bearer ' + localStorage.getItem('authToken')\n                },\n                body:JSON.stringify({\n                    title: props.title,\n                    content: props.content,\n                    published: props.published,\n                })\n            })\n                .then(response=>response.json())\n                .then(data=>{\n                    console.log(data);\n                    history.push('/');\n                })\n                .catch(err=>console.error(err))\n        }\n    }\n    const handleEditorChange = (e) => {\n        console.log(\n          'Content was updated:',\n          e.target.getContent()\n        );\n        props.setContent(e.target.getContent());\n    }\n\n    return(\n        <div className='postForm'>\n            <h2>Creating New Post</h2>\n            <form>\n                <label>Title \n                    <input\n                        type = 'text'\n                        name = 'title'\n                        className = 'formTitle'\n                        value = {props.title}\n                        onChange = {props.onChange}\n                    />\n                </label>\n                <label> Post Content\n                    <Editor\n                        className='editor'\n                        textareaName='myTextArea'\n                        apiKey=\"iou7093g4pl6zn5mrc6fxwye33asheqmzogqvbiyn985qfef\"\n                        value={props.content}\n                        onEditorChange={props.onChange}\n                        tagName='textarea'\n                        init={{\n                        height: 300,\n                        menubar: false,\n                        plugins: [\n                            'advlist autolink lists link image',\n                            'charmap print preview anchor help',\n                            'searchreplace visualblocks code',\n                            'insertdatetime media table paste wordcount'\n                        ],\n                        toolbar:\n                            'undo redo | formatselect | bold italic | alignleft aligncenter alignright | bullist numlist outdent indent | help'\n                        }}\n                        onChange={handleEditorChange}\n                    />\n                </label>\n                {/* <label> Post Content\n                    <textarea\n                        name = 'content'\n                        value = {props.content}\n                        onChange = {props.onChange}\n                    />\n                </label> */}\n                <label>Publish\n                    <input\n                        type = 'checkbox'\n                        name = 'published'\n                        value = {props.published}\n                        checked = {props.published}\n                        onChange = {props.onChange}\n                    />\n                </label>\n                <button\n                    onClick={onSubmit}\n                    type='submit'\n                >Submit</button>\n            </form>\n        </div>\n    );\n}\n\nexport default BlogCreate","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Editor } from '@tinymce/tinymce-react'; \nimport { useEffect } from \"react\";\n\nconst BlogEdit = props => {\n    const {id} = useParams();\n    const history = useHistory();\n\n    useEffect(()=>{\n        console.log('INITIAL CONTENT',props.content);\n        props.setContent(htmlDecode(props.content))\n    },[])\n\n    function onSubmit(e) {\n        e.preventDefault();\n        props.checkExpiration();\n        if(props.checkExpiration) {\n            history.push('./login')\n        }else{\n            fetch(`${process.env.REACT_APP_API}/posts/${id}`,{\n                method:'PUT',\n                headers:{\n                    'Content-Type':'application/json',\n                    'Authorization':'Bearer ' + localStorage.getItem('authToken')\n                },\n                body:JSON.stringify({\n                    title: props.title,\n                    // content:changeCounter>1?props.content:initialContent,\n                    content: props.content,\n                    published: props.published,\n                    author: props.editAuthor\n                })\n            })\n                .then(response=>response.json())\n                .then(data=>{\n                    console.log(data);\n                    history.push('/');\n                })\n                .catch(err=>{\n                    console.error(err);\n                    // props.sessionExpired();\n                    history.push('./login');\n                })\n        }\n    }\n\n    function htmlDecode(input){\n        var doc = new DOMParser().parseFromString(input, \"text/html\");\n        // console.log('doc', doc.documentElement.textContent);\n        return doc.documentElement.textContent;\n    }\n\n    return(\n        <div className='postForm'>\n            <h2>Editing {props.title}</h2>\n            <form>\n            <div\n                className='return'\n                onClick={()=>history.push('/')}\n            />\n                <label>Title\n                    <input\n                        type = 'text'\n                        name = 'title'\n                        className = 'formTitle'\n                        value = {props.title}\n                        onChange = {props.onChange}\n                    />\n                </label>\n                <label> Post Content\n                    <Editor\n                        textareaName='myTextArea'\n                        apiKey=\"iou7093g4pl6zn5mrc6fxwye33asheqmzogqvbiyn985qfef\"\n                        initialValue={props.content}\n                        onEditorChange={props.onChange}\n                        init={{\n                        height: 300,\n                        menubar: false,\n                        plugins: [\n                            'advlist autolink lists link image',\n                            'charmap print preview anchor help',\n                            'searchreplace visualblocks code',\n                            'insertdatetime media table paste wordcount'\n                        ],\n                        toolbar:\n                            'undo redo | formatselect | bold italic | alignleft aligncenter alignright | bullist numlist outdent indent | help'\n                        }}\n                        // onChange={handleEditorChange}\n                    />\n                </label>\n                {/* <label> Post Content: \n                    <textarea\n                        name = 'content'\n                        value = {props.content}\n                        onChange = {props.onChange}\n                    />\n                </label> */}\n                {/* <button onClick={(e)=>{\n                    e.preventDefault();\n                    console.log(htmlDecode(props.content));\n                    }}>\n                    TEST\n                </button> */}\n                <label>Publish?\n                    <input\n                        type = 'checkbox'\n                        name = 'published'\n                        value = {props.published}\n                        checked = {props.published}\n                        onChange = {props.onChange}\n                    />\n                </label>\n                <button\n                    onClick={onSubmit}\n                    type='submit'\n                >Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default BlogEdit","import React from 'react'\n\nconst UserContext = React.createContext()\n\nexport const UserProvider = UserContext.Provider\nexport const UserConsumer = UserContext.Consumer\n\nexport default UserContext","import React, { useContext } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\"\nimport UserContext from './UserContext'\n\nconst Header = props => {\n    const history = useHistory();\n    const user = useContext(UserContext)\n  \n    if(user){\n        return(\n            <header>\n                <Link to='/'>Blog Manager</Link>\n                <nav>\n                    <a href='https://lufere.dev/blog-API'>Blog Viewer</a>\n                    <p>Welcome <span>{user.username}</span></p>\n                    <button\n                        onClick={()=>{\n                            history.push('/login');\n                            localStorage.clear();\n                            // window.location.reload();\n                            props.logout();\n                        }}\n                    >\n                        Logout\n                    </button>\n                </nav>\n            </header>\n        )\n    }else{\n        return(\n            <header>\n                <Link to='/'>Blog Manager</Link>\n                <nav>\n                    <a href='https://lufere.dev/blog-API'>Blog Viewer</a>\n                    <Link to='/login'>Login</Link>\n                    <Link to='/signup'>Sign up</Link>\n                </nav>\n            </header>\n        )\n    }\n\n}\n\nexport default Header","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\"\n\nconst Signup = props => {\n    const history = useHistory();\n    \n    useEffect(()=>{\n        props.setErrors();\n        props.reset();\n    },[])\n\n    function onSubmit(e){\n        e.preventDefault();\n        fetch(`${process.env.REACT_APP_API}/sign-up`,{\n            method:'POST',\n            headers:{'Content-Type':'application/json'},\n            body:JSON.stringify({\n                \"username\":props.username,\n                \"password\":props.password,\n                \"creator\":true\n            })\n        })\n        .then(res=>res.json())\n        .then(data=>{\n            if(data.status===400){\n                // console.log('info', data.errors)\n                props.setErrors(data.errors[0].msg)\n                // if(data.info && data.info.message) alert(data.info.message);\n                // if(data.errors){\n                //     data.errors.forEach(error=>alert(error.msg))\n                // }\n                props.setPassword('');\n            }\n            if(data.status===200){\n                let token = data.token;\n                let user = data.user;\n                console.log('user', data.user)\n                localStorage.setItem('currentUser', JSON.stringify(user));\n                localStorage.setItem('authToken', token);\n                props.setUsername('');\n                props.setPassword('');\n                history.push('/');\n            }\n        })\n        .catch(err=>console.error(err))\n    }\n\n    return(\n        <div className='userFormContainer'>\n            {props.errors?<div className='errorBanner'>{props.errors}</div>:null}\n            <div className='userForm'>\n                <h3>Sign up</h3>\n                <form>\n                    <label> Username\n                        <input type='text' name='username' value={props.username} onChange={props.onChange}></input>\n                    </label>\n                    <label> Password\n                        <input type='password' name='password' value={props.password} onChange={props.onChange}></input>\n                    </label>\n                    <p>Already have an account? <Link to='/login'> Log In</Link></p>\n                    <button className='signupSubmit' type='submit' onClick={onSubmit}>Sign up</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Signup","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react';\nimport { Switch, Route, HashRouter } from 'react-router-dom';\nimport './App.scss';\nimport jwt from 'jsonwebtoken';\n\nimport Login from './Login';\nimport Homepage from './Homepage';\nimport BlogCreate from './BlogCreate';\nimport BlogEdit from './BlogEdit';\nimport Header from './Header';\nimport Signup from './Signup';\n\n\nimport { UserProvider } from './UserContext'\n\n\nfunction App() {\n  // const history = useHistory();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [currentUser, setCurrentUser] = useState(null);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [published, setPublished] = useState(true);\n  const [userPosts, setUserPosts] = useState();\n  const [editAuthor, setEditAuthor] = useState();\n  const [errors, setErrors] = useState();\n  const [expired, setExpired] = useState(false);\n\n  function onChange(e){\n    let name, value;\n    if(e.target){\n      name = e.target.name;\n      value = e.target.value;\n    }else{\n      name = 'content';\n      value = e;\n      // value = htmlDecode(e);\n    }\n    // console.log(name, value);\n    if(name==='username') setUsername(value);\n    if(name==='password') setPassword(value);\n    if(name==='title') setTitle(value);\n    if(name==='content') setContent(value);\n    if(name==='published') setPublished(!published);\n  }\n\n  function logout(){\n    setCurrentUser(null);\n    // history.push('/login');\n  }\n\n  function reset(){\n    setUsername('');\n    setPassword('');\n  }\n\n  function sessionExpired(){\n    setErrors('Session Expired, Log in again');\n    setExpired(true);\n    logout();\n    localStorage.clear();\n  }\n\n  function checkExpiration(){\n    if(localStorage.getItem('authToken')){\n      var isExpired = false;\n      const token = localStorage.getItem('authToken');\n      var decodedToken = jwt.decode(token, {complete:true});\n      var dateNow = new Date();\n      if(decodedToken.payload.exp < dateNow.getTime()/1000) isExpired = true;\n      let payload = decodedToken.payload;\n      payload.token = token;\n      if(isExpired){\n        // setCurrentUser();\n        localStorage.clear();\n        return true\n      }else{\n        setCurrentUser(payload);\n        return false\n      }\n      // console.log(decodedToken.payload.username);\n      // localStorage.setItem('currentUser', decodedToken.payload.username)\n      // console.log(dateNow.getTime()/1000);\n      // console.log('EXPIRED ',isExpired);\n    }\n  }\n\n  useEffect(()=>{\n    // console.log('tokenLS', localStorage.getItem('authToken'));\n    // console.log('hi')\n    checkExpiration();\n    // localStorage.clear()\n  },[])\n\n  // useEffect(()=>console.log('USER POSTS', userPosts),[userPosts])\n  // useEffect(()=>console.log('set', currentUser),[currentUser])\n\n  return (\n    <UserProvider value={currentUser}>\n      <HashRouter>\n        <Header\n          checkExpiration={checkExpiration}\n          logout={logout}\n        />\n        <Switch>\n          <Route exact path='/'>\n            <Homepage\n              errors={errors}\n              setErrors={setErrors}\n              // currentUser={currentUser}\n              setCurrentUser={setCurrentUser}\n              checkExpiration={checkExpiration}\n              sessionExpired={sessionExpired}\n              setExpired={setExpired}\n              logout={logout}\n              userPosts={userPosts}\n              setUserPosts={setUserPosts}\n              title={title}\n              setTitle={setTitle}\n              content={content}\n              setContent={setContent}\n              published={published}\n              setPublished={setPublished}\n              setEditAuthor={setEditAuthor}\n            />\n          </Route>\n          <Route exact path='/login'>\n            <Login\n              errors={errors}\n              setErrors={setErrors}\n              expired={expired}\n              username={username}\n              password={password}\n              reset={reset}\n              onChange={onChange}\n              // currentUser={currentUser}\n              checkExpiration={checkExpiration}\n              setCurrentUser={setCurrentUser}\n            />\n          </Route>\n          <Route exact path='/signup'>\n            <Signup\n              errors={errors}\n              setErrors={setErrors}\n              reset={reset}\n              username={username}\n              setUsername={setUsername}\n              password={password}\n              setPassword={setPassword}\n              onChange={onChange}\n            />\n          </Route>\n          <Route exact path='/posts/'>\n            <BlogCreate\n              title={title}\n              setTitle={setTitle}\n              content={content}\n              setContent={setContent}\n              published={published}\n              setPublished={setPublished}\n              onChange={onChange}\n              checkExpiration={checkExpiration}\n            />\n          </Route>\n          <Route exact path='/posts/:id'>\n            <BlogEdit\n              title={title}\n              setTitle={setTitle}\n              content={content}\n              setContent={setContent}\n              published={published}\n              setPublished={setPublished}\n              onChange={onChange}\n              checkExpiration={checkExpiration}\n              editAuthor={editAuthor}\n              setEditAuthor={setEditAuthor}\n              sessionExpired={sessionExpired}\n            />\n          </Route>\n        </Switch>\n      </HashRouter>\n    </UserProvider>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}